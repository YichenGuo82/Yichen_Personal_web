---
title: "Naive Bayes"
author: "Yichen Guo"
date: "2022-10-12"
output: html_document
---




```r
library("tidyverse")
```

```
## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6     ✔ purrr   0.3.4
## ✔ tibble  3.1.7     ✔ dplyr   1.0.9
## ✔ tidyr   1.2.0     ✔ stringr 1.4.0
## ✔ readr   2.1.2     ✔ forcats 0.5.1
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
```

```r
library("e1071")
library("caret")
```

```
## Loading required package: lattice
## 
## Attaching package: 'caret'
## 
## The following object is masked from 'package:purrr':
## 
##     lift
```

```r
library("caTools")
library(dplyr)
```



```r
incident_2018 <- read_csv("~/anly-501-project-YichenG82619/data/01-modified-data/incident_2018.csv")
```

```
## Rows: 28484 Columns: 24
## ── Column specification ────────────────────────────────────────────────────────
## Delimiter: ","
## chr  (11): Incident.Date, Incident.Day.of.Week, Report.Datetime, Report.Type...
## dbl  (11): Incident.Year, Incident.ID, Incident.Number, Incident.Code, CNN, ...
## lgl   (1): Filed.Online
## time  (1): Incident.Time
## 
## ℹ Use `spec()` to retrieve the full column specification for this data.
## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
```

```r
head(incident_2018)
```

```
## # A tibble: 6 × 24
##   Incident.Date Incident.Time Incident.Year Incident.Day.of.Week Report.Datetime
##   <chr>         <time>                <dbl> <chr>                <chr>          
## 1 12/31/18      23:15                  2018 Monday               1/1/19 23:26   
## 2 12/31/18      14:00                  2018 Monday               12/31/18 18:43 
## 3 12/31/18      23:30                  2018 Monday               1/1/19 12:25   
## 4 12/31/18      18:00                  2018 Monday               12/31/18 19:39 
## 5 12/31/18      19:10                  2018 Monday               12/31/18 20:46 
## 6 12/31/18      16:32                  2018 Monday               1/7/19 12:54   
## # … with 19 more variables: Incident.ID <dbl>, Incident.Number <dbl>,
## #   Report.Type.Description <chr>, Filed.Online <lgl>, Incident.Code <dbl>,
## #   Incident.Subcategory <chr>, Incident.Description <chr>, Resolution <chr>,
## #   Intersection <chr>, CNN <dbl>, Police.District <chr>,
## #   Analysis.Neighborhood <chr>, Supervisor.District <dbl>, Latitude <dbl>,
## #   Longitude <dbl>, Point <chr>, Neighborhoods <dbl>,
## #   Current.Supervisor.Districts <dbl>, Current.Police.Districts <dbl>
```

```r
df= incident_2018%>%
  select(Incident.Day.of.Week,Report.Type.Description,Incident.Description, Police.District)
df= df %>% separate(Incident.Description, c('crime_type','locked_type','value_lost'), sep = ",")
df <- subset(df, select = -crime_type)
#Based on the position
df <- df %>% mutate(across(c(1: 3), factor))
df <- df %>% mutate(Police.District = factor(Police.District))
```


```r
str(df)
```

```
## tibble [28,484 × 5] (S3: tbl_df/tbl/data.frame)
##  $ Incident.Day.of.Week   : Factor w/ 7 levels "Friday","Monday",..: 2 2 2 2 2 2 2 2 2 2 ...
##  $ Report.Type.Description: Factor w/ 6 levels "Coplogic Initial",..: 1 1 3 1 3 2 3 1 1 3 ...
##  $ locked_type            : Factor w/ 2 levels " From Locked Vehicle",..: 1 2 1 2 1 1 1 1 1 1 ...
##  $ value_lost             : chr [1:28484] " >$950" " >$950" " >$950" " >$950" ...
##  $ Police.District        : Factor w/ 11 levels "Bayview","Central",..: 4 1 4 2 2 4 9 2 5 4 ...
```

```r
df$extreme_level_label <- with(df, ifelse(df$value_lost %in% " >$950", '1', '0'))
df <- df %>% mutate(value_lost = factor(value_lost))
```


```r
# Splitting data into train and test data
split <- sample.split(df$extreme_level_label, SplitRatio = 0.7)
train_cl <- subset(df, split == "TRUE")
test_cl <- subset(df, split == "FALSE")
```


```r
# Fitting Naive Bayes Model to training dataset
classifier_cl <- naiveBayes(extreme_level_label ~ ., data = train_cl)
classifier_cl
```

```
## 
## Naive Bayes Classifier for Discrete Predictors
## 
## Call:
## naiveBayes.default(x = X, y = Y, laplace = laplace)
## 
## A-priori probabilities:
## Y
##        0        1 
## 0.153117 0.846883 
## 
## Conditional probabilities:
##    Incident.Day.of.Week
## Y      Friday    Monday  Saturday    Sunday  Thursday   Tuesday Wednesday
##   0 0.1451032 0.1333115 0.1519817 0.1552571 0.1349492 0.1470685 0.1323289
##   1 0.1523747 0.1369182 0.1540329 0.1530262 0.1375696 0.1320028 0.1340756
## 
##    Report.Type.Description
## Y   Coplogic Initial Coplogic Supplement      Initial Initial Supplement
##   0     0.0003275467        0.0252210940 0.9384212250       0.0347199476
##   1     0.6694302973        0.0859291721 0.2283548502       0.0161080185
##    Report.Type.Description
## Y   Vehicle Initial Vehicle Supplement
##   0    0.0009826400       0.0003275467
##   1    0.0001776620       0.0000000000
## 
##    locked_type
## Y    From Locked Vehicle  From Unlocked Vehicle
##   0            0.8735670              0.1264330
##   1            0.8925145              0.1074855
## 
##    value_lost
## Y         <$50      >$950  $200-$950   $50-$200       Att.
##   0 0.12381264 0.00000000 0.58499836 0.21388798 0.07730102
##   1 0.00000000 1.00000000 0.00000000 0.00000000 0.00000000
## 
##    Police.District
## Y       Bayview     Central   Ingleside     Mission    Northern   Out of SF
##   0 0.073698002 0.214543072 0.074680642 0.118571896 0.157222404 0.002292827
##   1 0.052706384 0.219708634 0.030024873 0.113644439 0.211713846 0.004145446
##    Police.District
## Y          Park    Richmond    Southern     Taraval  Tenderloin
##   0 0.059941042 0.075008189 0.108090403 0.088437602 0.027513921
##   1 0.050041454 0.094516167 0.143906194 0.052647163 0.026945399
```

```r
# Predicting on test data'
y_pred <- predict(classifier_cl, newdata = test_cl)
# Confusion Matrix
cm <- confusionMatrix(data = y_pred,reference = as.factor(test_cl$extreme_level_label))
#cm
```

```r
X <- as.data.frame(classifier_cl$tables$locked_type)
plt1=ggplot(X, aes(Y,locked_type, fill= Freq)) +
        geom_tile() + geom_text(aes(label=Freq)) +
        scale_fill_gradient(low="white", high="#990000") +
        labs(x = "Predict Labels",y = "True Labels") +
        ggtitle("relationship between lock status and good lost")+
        theme(plot.title = element_text(size = 25, face = "bold"))
plt1
```

<img src="Naive_Bayes_R_files/figure-html/unnamed-chunk-7-1.png" width="672" />

```r
ggsave("relationship_lock_and_lost.png", plt1, path = "~/anly-501-project-YichenG82619/501-project-website/images",width = 10,height = 7)
```


```r
#plot the matrix
plt <- as.data.frame(cm$table)
plt$Prediction <- factor(plt$Prediction, levels=rev(levels(plt$Prediction)))
cf=ggplot(plt, aes(Prediction,Reference, fill= Freq)) +
        geom_tile() + geom_text(aes(label=Freq)) +
        scale_fill_gradient(low="white", high="#08306B") +
        labs(x = "Predict Labels",y = "True Labels") +
        ggtitle("Confusion Matrix of Car Breakins and Value lost")+
        theme(plot.title = element_text(size = 25, face = "bold"))
cf
```

<img src="Naive_Bayes_R_files/figure-html/unnamed-chunk-8-1.png" width="672" />

```r
ggsave("CM_Carbreakins.png", cf, path = "~/anly-501-project-YichenG82619/501-project-website/images",width = 10,height = 7)
```

